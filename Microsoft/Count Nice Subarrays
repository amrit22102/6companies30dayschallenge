Link- https://leetcode.com/problems/count-number-of-nice-subarrays/
//Brute Force 
//TLE
class Solution {
public:
    int numberOfSubarrays(vector<int>& nums, int k) {
        int nice = 0;
        int n= nums.size();
        for(int i=0; i<=n-k;i++){
            for(int j=i+k-1;j<n;j++){
                int cnt = 0;
                for(int l=i; l<=j; l++){
                    if(nums[l]%2!=0){
                        cnt++;
                        }
                }
                if(cnt==k){
                    nice++;
                }
            }
        }
        return nice;
    }
};

//Optimised Soln
https://leetcode.com/problems/count-number-of-nice-subarrays/solutions/2560994/c-3-approaches-solution
